services:
#    requestum_user_single_session.example:
#        class: Requestum\UserSingleSessionBundle\Example
#        arguments: ["@service_id", "plain_value", %parameter%]

    requestum_user_single_session.memcached:
        class: Memcached
        calls:
            - [ addServers, [ %memcached.servers% ]]

    requestum_user_single_session.token_manager.memcached:
        class: Requestum\UserSingleSessionBundle\Utils\TokenIdManager\MemcachedTokenIdManager
        arguments: ["@requestum_user_single_session.memcached"]

    requestum_user_single_session.token_manager.entity:
        class: Requestum\UserSingleSessionBundle\Utils\TokenIdManager\DoctrineTokenIdManager
        arguments: ["@doctrine.orm.entity_manager"]

    requestum_user_single_session.validator:
        class: Requestum\UserSingleSessionBundle\Utils\TokenValidator

    requestum_user_single_session.validation_failure_handler.logout:
        class: Requestum\UserSingleSessionBundle\Utils\TokenValidationFailureHandler\FailureLogoutHandler
        arguments: ["@router"]

    requestum_user_single_session.validation_failure_handler.view:
        class: Requestum\UserSingleSessionBundle\Utils\TokenValidationFailureHandler\FailureViewHandler
        arguments: ["@templating", "@security.token_storage"]

    requestum_user_single_session.listener:
        class: Requestum\UserSingleSessionBundle\EventListener\TokenValidatorListener
        arguments: ["@security.token_storage", "@requestum_user_single_session.validator"]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: security.interactive_login, method: onInteractiveLogin }